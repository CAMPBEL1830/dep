import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Associer chaque ID à son année d'octroi et groupe
id_info = df[['ID', 'Année_octroi', 'Groupe']].drop_duplicates()

# Enregistrer les résultats dans un nouveau fichier Excel
id_info.to_excel('id_with_year_and_group.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'id_with_year_and_group.xlsx'.")



code 2


import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Associer chaque ID à son année d'octroi et groupe
id_year_group = df[['ID', 'Année_octroi', 'Groupe']].drop_duplicates()

# Compter le nombre d'ID uniques par année et groupe
result = id_year_group.groupby(['Année_octroi', 'Groupe'])['ID'].nunique().reset_index()

# Renommer la colonne de comptage
result.rename(columns={'ID': 'Nombre_ID_uniques'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
result.to_excel('id_count_by_year_and_group.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'id_count_by_year_and_group.xlsx'.")








code 10 


import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Grouper par ID, Année_octroi et Groupe, puis compter les Numero_dossier
id_grouped = df.groupby(['ID', 'Année_octroi', 'Groupe']).agg(
    Nombre_Numero_dossier=('Numero_dossier', 'count')
).reset_index()

# Identifier les ID uniques et leur somme des Numero_dossier
id_sum = id_grouped.groupby(['ID', 'Année_octroi']).agg(
    Total_Numero_dossier=('Nombre_Numero_dossier', 'sum'),
    Groupe=('Groupe', 'first')
).reset_index()

# Enregistrer les résultats dans un nouveau fichier Excel
id_sum.to_excel('id_representative_with_details.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'id_representative_with_details.xlsx'.")




code 1111

import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Âge' en numérique et ignorer les valeurs non convertibles
df['Âge'] = pd.to_numeric(df['Âge'], errors='coerce')

# Calculer l'âge moyen, minimum et maximum par groupe
age_stats = df.groupby('Groupe')['Âge'].agg(['mean', 'min', 'max']).reset_index()

# Renommer les colonnes
age_stats.rename(columns={'mean': 'Âge moyen', 'min': 'Âge min', 'max': 'Âge max'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
age_stats.to_excel('age_statistics_by_group.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'age_statistics_by_group.xlsx'.")






code 2222222


import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Âge' en numérique et ignorer les valeurs non convertibles et les zéros
df['Âge'] = pd.to_numeric(df['Âge'], errors='coerce')
df = df[df['Âge'] != 0]

# Calculer l'âge moyen, minimum et maximum par groupe
age_stats = df.groupby('Groupe')['Âge'].agg(['mean', 'min', 'max']).reset_index()

# Renommer les colonnes
age_stats.rename(columns={'mean': 'Âge moyen', 'min': 'Âge min', 'max': 'Âge max'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
age_stats.to_excel('age_statistics_by_group.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'age_statistics_by_group.xlsx'.")


code 8888888


import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Durée_solve' en numérique et ignorer les valeurs non convertibles
df['Durée_solve'] = pd.to_numeric(df['Durée_solve'], errors='coerce')

# Calculer la durée moyenne par groupe et année d'octroi
group_stats = df.groupby(['Groupe', 'Année_octroi'])['Durée_solve'].mean().reset_index()

# Renommer la colonne de moyenne
group_stats.rename(columns={'Durée_solve': 'Durée_solve_moyenne'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
group_stats.to_excel('group_stats_with_year_and_duration.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'group_stats_with_year_and_duration.xlsx'.")



code 18885555




import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Durée_solve' en numérique et ignorer les valeurs non convertibles
df['Durée_solve'] = pd.to_numeric(df['Durée_solve'], errors='coerce')

# Ignorer les valeurs de 'Durée_solve' qui sont égales à zéro
df = df[df['Durée_solve'] != 0]

# Calculer la durée moyenne par groupe et année d'octroi
group_stats = df.groupby(['Groupe', 'Année_octroi'])['Durée_solve'].mean().reset_index()

# Renommer la colonne de moyenne
group_stats.rename(columns={'Durée_solve': 'Durée_solve_moyenne'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
group_stats.to_excel('group_stats_with_year_and_duration.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'group_stats_with_year_and_duration.xlsx'.")





codei 22229937373 



import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Taux_interet' en numérique et ignorer les valeurs non convertibles
df['Taux_interet'] = pd.to_numeric(df['Taux_interet'], errors='coerce')

# Calculer la moyenne du taux d'intérêt par catégorie
taux_moyen = df.groupby('Catégorie')['Taux_interet'].mean().reset_index()

# Renommer la colonne de moyenne
taux_moyen.rename(columns={'Taux_interet': 'Taux_interet_moyen'}, inplace=True)

# Enregistrer les résultats dans un nouveau fichier Excel
taux_moyen.to_excel('taux_interet_moyen_par_categorie.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'taux_interet_moyen_par_categorie.xlsx'.")




code 999999999


import pandas as pd

# Charger le fichier Excel
file_path = 'votre_fichier.xlsx'
df = pd.read_excel(file_path)

# Convertir la colonne 'Montant_encours' en numérique
df['Montant_encours'] = pd.to_numeric(df['Montant_encours'], errors='coerce')

# Calculer le montant des encours par client et année
encours_par_client = df.groupby(['ID_client', 'Année_octroi'])['Montant_encours'].sum().reset_index()

# Enregistrer les résultats dans un nouveau fichier Excel
encours_par_client.to_excel('encours_par_client_et_annee.xlsx', index=False)

print("Les résultats ont été enregistrés dans 'encours_par_client_et_annee.xlsx'.")




code 1234666(67888888




Information 
Pan de sécurisation de la migration 
-prioriser les élément indispensable de chaque département pour sécuriser le chantier 

Nouvelles tâches

-identifier les autres tâche de production en plus du chantier de migration a donné à une autre personne (Dabone) Ipou de préférence 
-vérifier si la synchronisation est complète ou partielle ( Dabone)
-ramenér les fichiers non utilisés sur le U pour libérer l’espace sur le S (tout le monde ) 

-analyse DPI Dabone 
-faire le point des numéros modifier dans les entrées en masse pour le soumettre à Mr Désiré 
-faire le point avec Yan et la RPA pour les anomalies (Dosso)
-mise en place Contrôle des nom des mère et CNI qui ne sont pas renseigner par la RPA (Dosso & Bile)
-licence tableau 

